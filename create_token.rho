new basket,
  entryCh,
  returnCh,
  lookup(`rho:registry:lookup`),
  stdout(`rho:io:stdout`)
in {

  lookup!(`rho:id:apdmwj6kewtrbu4bnqigdkixbru9u5bkmf9xud3r8tshjq9uexoz3t`, *entryCh) |

  for(entry <- entryCh) {
    entry!(
      {
        "type": "CREATE_TOKEN",
        "payload": {
          // signature of the current nonce, with the private key of the owner (generateSignatureForNonce.js)
          "signature": "SIGNATURE",
          // new nonce, must be different and random (generateNonce.js)
          "newNonce": "NONCE",
          // per token price, can be Nil if the token is not for sale
          "price": 2,
          // The token you create can be a new one ("n" : Nil)
          // or it can be linked to an existing token data (ex: "n": "0")
          "n": "0",
          // quantity of tokens to create
          "quantity": 800,
          // publicKey this set of tokens (depending on quantity) will belong to
          "publicKey": "04b50dbf4e03cf9abe39238086ca74f53a9ec9f1b68efc6376cb0cd88dd263ea7b987c5a0f3c655252abdfac247d8eb76b3c93f95bbc61467a0dc78c8d32a5bbb7", // used only if new token
          // data is used only if new token ("n" : Nil)
          "data": Nil
        }
      },
      *returnCh
    )
  } |

  for (resp <- returnCh) {
    match *resp {
      String => { stdout!(*resp) }
      true => { stdout!("success, token created") }
    }
  } |

  basket!({ "status": "completed" })

}
